[{"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\index.js":"1","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\App.js":"2","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\Home.js":"3","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\SignUp.js":"4","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\SignIn.js":"5","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\Profile.js":"6","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\layout\\Main.js":"7","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\Member.js":"8","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\Masters\\TeamsList.jsx":"9","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\Masters\\TaskList.jsx":"10","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\layout\\Footer.js":"11","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\layout\\Sidenav.js":"12","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\layout\\Header.js":"13","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\forms\\TaskListForm.jsx":"14","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\hooks\\usePostApi.js":"15","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\axiosConfig.js":"16","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\forms\\TaskForm1.jsx":"17","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\hooks\\useAxios.js":"18","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\model\\UpdateUserModal.jsx":"19","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\hooks\\useFormData.jsx":"20"},{"size":243,"mtime":1738478204330,"results":"21","hashOfConfig":"22"},{"size":2403,"mtime":1738731199899,"results":"23","hashOfConfig":"22"},{"size":15939,"mtime":1738519432003,"results":"24","hashOfConfig":"22"},{"size":3964,"mtime":1738493473322,"results":"25","hashOfConfig":"22"},{"size":5645,"mtime":1738726086956,"results":"26","hashOfConfig":"22"},{"size":6321,"mtime":1738695860671,"results":"27","hashOfConfig":"22"},{"size":3636,"mtime":1738478174785,"results":"28","hashOfConfig":"22"},{"size":2814,"mtime":1738513782863,"results":"29","hashOfConfig":"22"},{"size":9838,"mtime":1738686261180,"results":"30","hashOfConfig":"22"},{"size":9092,"mtime":1738726671615,"results":"31","hashOfConfig":"22"},{"size":619,"mtime":1738478117986,"results":"32","hashOfConfig":"22"},{"size":3972,"mtime":1738519525589,"results":"33","hashOfConfig":"22"},{"size":9807,"mtime":1738731144197,"results":"34","hashOfConfig":"22"},{"size":5309,"mtime":1738506780263,"results":"35","hashOfConfig":"22"},{"size":730,"mtime":1738484890643,"results":"36","hashOfConfig":"22"},{"size":545,"mtime":1738493464835,"results":"37","hashOfConfig":"22"},{"size":4589,"mtime":1738518904844,"results":"38","hashOfConfig":"22"},{"size":666,"mtime":1738499911314,"results":"39","hashOfConfig":"22"},{"size":3505,"mtime":1738695900216,"results":"40","hashOfConfig":"22"},{"size":929,"mtime":1738693311435,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1gn8fui",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\index.js",[],["90","91"],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\App.js",["92","93"],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\Home.js",["94","95"],"\nimport { useState } from \"react\";\n\nimport {\n  Card,\n  Col,\n  Row,\n  Typography,\n  Tooltip,\n  Progress,\n  Upload,\n  message,\n  Button,\n  Timeline,\n  Radio,\n} from \"antd\";\nimport {\n  ToTopOutlined,\n  MenuUnfoldOutlined,\n  RightOutlined,\n} from \"@ant-design/icons\";\nimport Paragraph from \"antd/lib/typography/Paragraph\";\n\n\n\nimport ava1 from \"../../assets/images/logo-shopify.svg\";\nimport ava2 from \"../../assets/images/logo-atlassian.svg\";\nimport ava3 from \"../../assets/images/logo-slack.svg\";\nimport ava4 from \"../../assets/images/logo-spotify.svg\";\nimport ava5 from \"../../assets/images/logo-jira.svg\";\nimport ava6 from \"../../assets/images/logo-invision.svg\";\nimport team1 from \"../../assets/images/team-1.jpg\";\nimport team2 from \"../../assets/images/team-2.jpg\";\nimport team3 from \"../../assets/images/team-3.jpg\";\nimport team4 from \"../../assets/images/team-4.jpg\";\nimport card from \"../../assets/images/info-card-1.jpg\";\n\nfunction Home() {\n  const { Title, Text } = Typography;\n\n  const onChange = (e) => console.log(`radio checked:${e.target.value}`);\n\n  const [reverse, setReverse] = useState(false);\n\n  const dollor = [\n    <svg\n      width=\"22\"\n      height=\"22\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      key={0}\n    >\n      <path\n        d=\"M8.43338 7.41784C8.58818 7.31464 8.77939 7.2224 9 7.15101L9.00001 8.84899C8.77939 8.7776 8.58818 8.68536 8.43338 8.58216C8.06927 8.33942 8 8.1139 8 8C8 7.8861 8.06927 7.66058 8.43338 7.41784Z\"\n        fill=\"#fff\"\n      ></path>\n      <path\n        d=\"M11 12.849L11 11.151C11.2206 11.2224 11.4118 11.3146 11.5666 11.4178C11.9308 11.6606 12 11.8861 12 12C12 12.1139 11.9308 12.3394 11.5666 12.5822C11.4118 12.6854 11.2206 12.7776 11 12.849Z\"\n        fill=\"#fff\"\n      ></path>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18ZM11 5C11 4.44772 10.5523 4 10 4C9.44772 4 9 4.44772 9 5V5.09199C8.3784 5.20873 7.80348 5.43407 7.32398 5.75374C6.6023 6.23485 6 7.00933 6 8C6 8.99067 6.6023 9.76515 7.32398 10.2463C7.80348 10.5659 8.37841 10.7913 9.00001 10.908L9.00002 12.8492C8.60902 12.7223 8.31917 12.5319 8.15667 12.3446C7.79471 11.9275 7.16313 11.8827 6.74599 12.2447C6.32885 12.6067 6.28411 13.2382 6.64607 13.6554C7.20855 14.3036 8.05956 14.7308 9 14.9076L9 15C8.99999 15.5523 9.44769 16 9.99998 16C10.5523 16 11 15.5523 11 15L11 14.908C11.6216 14.7913 12.1965 14.5659 12.676 14.2463C13.3977 13.7651 14 12.9907 14 12C14 11.0093 13.3977 10.2348 12.676 9.75373C12.1965 9.43407 11.6216 9.20873 11 9.09199L11 7.15075C11.391 7.27771 11.6808 7.4681 11.8434 7.65538C12.2053 8.07252 12.8369 8.11726 13.254 7.7553C13.6712 7.39335 13.7159 6.76176 13.354 6.34462C12.7915 5.69637 11.9405 5.26915 11 5.09236V5Z\"\n        fill=\"#fff\"\n      ></path>\n    </svg>,\n  ];\n  const profile = [\n    <svg\n      width=\"22\"\n      height=\"22\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      key={0}\n    >\n      <path\n        d=\"M9 6C9 7.65685 7.65685 9 6 9C4.34315 9 3 7.65685 3 6C3 4.34315 4.34315 3 6 3C7.65685 3 9 4.34315 9 6Z\"\n        fill=\"#fff\"\n      ></path>\n      <path\n        d=\"M17 6C17 7.65685 15.6569 9 14 9C12.3431 9 11 7.65685 11 6C11 4.34315 12.3431 3 14 3C15.6569 3 17 4.34315 17 6Z\"\n        fill=\"#fff\"\n      ></path>\n      <path\n        d=\"M12.9291 17C12.9758 16.6734 13 16.3395 13 16C13 14.3648 12.4393 12.8606 11.4998 11.6691C12.2352 11.2435 13.0892 11 14 11C16.7614 11 19 13.2386 19 16V17H12.9291Z\"\n        fill=\"#fff\"\n      ></path>\n      <path\n        d=\"M6 11C8.76142 11 11 13.2386 11 16V17H1V16C1 13.2386 3.23858 11 6 11Z\"\n        fill=\"#fff\"\n      ></path>\n    </svg>,\n  ];\n  const heart = [\n    <svg\n      width=\"22\"\n      height=\"22\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      key={0}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M3.17157 5.17157C4.73367 3.60948 7.26633 3.60948 8.82843 5.17157L10 6.34315L11.1716 5.17157C12.7337 3.60948 15.2663 3.60948 16.8284 5.17157C18.3905 6.73367 18.3905 9.26633 16.8284 10.8284L10 17.6569L3.17157 10.8284C1.60948 9.26633 1.60948 6.73367 3.17157 5.17157Z\"\n        fill=\"#fff\"\n      ></path>\n    </svg>,\n  ];\n  const cart = [\n    <svg\n      width=\"22\"\n      height=\"22\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      key={0}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10 2C7.79086 2 6 3.79086 6 6V7H5C4.49046 7 4.06239 7.38314 4.00612 7.88957L3.00612 16.8896C2.97471 17.1723 3.06518 17.455 3.25488 17.6669C3.44458 17.8789 3.71556 18 4 18H16C16.2844 18 16.5554 17.8789 16.7451 17.6669C16.9348 17.455 17.0253 17.1723 16.9939 16.8896L15.9939 7.88957C15.9376 7.38314 15.5096 7 15 7H14V6C14 3.79086 12.2091 2 10 2ZM12 7V6C12 4.89543 11.1046 4 10 4C8.89543 4 8 4.89543 8 6V7H12ZM6 10C6 9.44772 6.44772 9 7 9C7.55228 9 8 9.44772 8 10C8 10.5523 7.55228 11 7 11C6.44772 11 6 10.5523 6 10ZM13 9C12.4477 9 12 9.44772 12 10C12 10.5523 12.4477 11 13 11C13.5523 11 14 10.5523 14 10C14 9.44772 13.5523 9 13 9Z\"\n        fill=\"#fff\"\n      ></path>\n    </svg>,\n  ];\n  const count = [\n    {\n      today: \"Today’s Sales\",\n      title: \"$53,000\",\n      persent: \"+30%\",\n      icon: dollor,\n      bnb: \"bnb2\",\n    },\n    {\n      today: \"Today’s Users\",\n      title: \"3,200\",\n      persent: \"+20%\",\n      icon: profile,\n      bnb: \"bnb2\",\n    },\n    {\n      today: \"New Clients\",\n      title: \"+1,200\",\n      persent: \"-20%\",\n      icon: heart,\n      bnb: \"redtext\",\n    },\n    {\n      today: \"New Orders\",\n      title: \"$13,200\",\n      persent: \"10%\",\n      icon: cart,\n      bnb: \"bnb2\",\n    },\n  ];\n\n  const list = [\n    {\n      img: ava1,\n      Title: \"Soft UI Shopify Version\",\n      bud: \"$14,000\",\n      progress: <Progress percent={60} size=\"small\" />,\n      member: (\n        <div className=\"avatar-group mt-2\">\n          <Tooltip placement=\"bottom\" title=\"Ryan Tompson\">\n            <img className=\"tootip-img\" src={team1} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Romina Hadid\">\n            <img className=\"tootip-img\" src={team2} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Alexander Smith\">\n            <img className=\"tootip-img\" src={team3} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Jessica Doe\">\n            <img className=\"tootip-img\" src={team4} alt=\"\" />\n          </Tooltip>\n        </div>\n      ),\n    },\n    {\n      img: ava2,\n      Title: \"Progress Track\",\n      bud: \"$3,000\",\n      progress: <Progress percent={10} size=\"small\" />,\n      member: (\n        <div className=\"avatar-group mt-2\">\n          <Tooltip placement=\"bottom\" title=\"Ryan Tompson\">\n            <img className=\"tootip-img\" src={team1} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Romina Hadid\">\n            <img className=\"tootip-img\" src={team2} alt=\"\" />\n          </Tooltip>\n        </div>\n      ),\n    },\n    {\n      img: ava3,\n      Title: \"Fix Platform Errors\",\n      bud: \"Not Set\",\n      progress: <Progress percent={100} size=\"small\" status=\"active\" />,\n      member: (\n        <div className=\"avatar-group mt-2\">\n          <Tooltip placement=\"bottom\" title=\"Ryan Tompson\">\n            <img className=\"tootip-img\" src={team1} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Romina Hadid\">\n            <img className=\"tootip-img\" src={team1} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Alexander Smith\">\n            <img className=\"tootip-img\" src={team3} alt=\"\" />\n          </Tooltip>\n        </div>\n      ),\n    },\n    {\n      img: ava4,\n      Title: \"Launch new Mobile App\",\n      bud: \"$20,600\",\n      progress: <Progress percent={100} size=\"small\" status=\"active\" />,\n      member: (\n        <div className=\"avatar-group mt-2\">\n          <Tooltip placement=\"bottom\" title=\"Ryan Tompson\">\n            <img className=\"tootip-img\" src={team1} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Romina Hadid\">\n            <img className=\"tootip-img\" src={team2} alt=\"\" />\n          </Tooltip>\n        </div>\n      ),\n    },\n    {\n      img: ava5,\n      Title: \"Add the New Landing Page\",\n      bud: \"$4,000\",\n      progress: <Progress percent={80} size=\"small\" />,\n      member: (\n        <div className=\"avatar-group mt-2\">\n          <Tooltip placement=\"bottom\" title=\"Ryan Tompson\">\n            <img className=\"tootip-img\" src={team1} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Romina Hadid\">\n            <img className=\"tootip-img\" src={team2} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Alexander Smith\">\n            <img className=\"tootip-img\" src={team3} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Jessica Doe\">\n            <img className=\"tootip-img\" src={team4} alt=\"\" />\n          </Tooltip>\n        </div>\n      ),\n    },\n\n    {\n      img: ava6,\n      Title: \"Redesign Online Store\",\n      bud: \"$2,000\",\n      progress: (\n        <Progress\n          percent={100}\n          size=\"small\"\n          status=\"exception\"\n          format={() => \"Cancel\"}\n        />\n      ),\n      member: (\n        <div className=\"avatar-group mt-2\">\n          <Tooltip placement=\"bottom\" title=\"Ryan Tompson\">\n            <img className=\"tootip-img\" src={team1} alt=\"\" />\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Romina Hadid\">\n            <img className=\"tootip-img\" src={team2} alt=\"\" />\n          </Tooltip>\n        </div>\n      ),\n    },\n  ];\n\n  const timelineList = [\n    {\n      title: \"$2,400 - Redesign store\",\n      time: \"09 JUN 7:20 PM\",\n      color: \"green\",\n    },\n    {\n      title: \"New order #3654323\",\n      time: \"08 JUN 12:20 PM\",\n      color: \"green\",\n    },\n    {\n      title: \"Company server payments\",\n      time: \"04 JUN 3:10 PM\",\n    },\n    {\n      title: \"New card added for order #4826321\",\n      time: \"02 JUN 2:45 PM\",\n    },\n    {\n      title: \"Unlock folders for development\",\n      time: \"18 MAY 1:30 PM\",\n    },\n    {\n      title: \"New order #46282344\",\n      time: \"14 MAY 3:30 PM\",\n      color: \"gray\",\n    },\n  ];\n\n  const uploadProps = {\n    name: \"file\",\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    headers: {\n      authorization: \"authorization-text\",\n    },\n    onChange(info) {\n      if (info.file.status !== \"uploading\") {\n        console.log(info.file, info.fileList);\n      }\n      if (info.file.status === \"done\") {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n  };\n\n  return (\n    <>\n      <div className=\"layout-content\">\n        <Row className=\"rowgap-vbox\" gutter={[24, 0]}>\n          {count.map((c, index) => (\n            <Col\n              key={index}\n              xs={24}\n              sm={24}\n              md={12}\n              lg={6}\n              xl={6}\n              className=\"mb-24\"\n            >\n              <Card bordered={false} className=\"criclebox \">\n                <div className=\"number\">\n                  <Row align=\"middle\" gutter={[24, 0]}>\n                    <Col xs={18}>\n                      <span>{c.today}</span>\n                      <Title level={3}>\n                        {c.title} <small className={c.bnb}>{c.persent}</small>\n                      </Title>\n                    </Col>\n                    <Col xs={6}>\n                      <div className=\"icon-box\">{c.icon}</div>\n                    </Col>\n                  </Row>\n                </div>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n\n        <Row gutter={[24, 0]}>\n          <Col xs={24} sm={24} md={12} lg={12} xl={16} className=\"mb-24\">\n            <Card bordered={false} className=\"criclebox cardbody h-full\">\n              <div className=\"project-ant\">\n                <div>\n                  <Title level={5}>Projects</Title>\n                  <Paragraph className=\"lastweek\">\n                    done this month<span className=\"blue\">40%</span>\n                  </Paragraph>\n                </div>\n                <div className=\"ant-filtertabs\">\n                  <div className=\"antd-pro-pages-dashboard-analysis-style-salesExtra\">\n                    <Radio.Group onChange={onChange} defaultValue=\"a\">\n                      <Radio.Button value=\"a\">ALL</Radio.Button>\n                      <Radio.Button value=\"b\">ONLINE</Radio.Button>\n                      <Radio.Button value=\"c\">STORES</Radio.Button>\n                    </Radio.Group>\n                  </div>\n                </div>\n              </div>\n              <div className=\"ant-list-box table-responsive\">\n                <table className=\"width-100\">\n                  <thead>\n                    <tr>\n                      <th>COMPANIES</th>\n                      <th>MEMBERS</th>\n                      <th>BUDGET</th>\n                      <th>COMPLETION</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {list.map((d, index) => (\n                      <tr key={index}>\n                        <td>\n                          <h6>\n                            <img\n                              src={d.img}\n                              alt=\"\"\n                              className=\"avatar-sm mr-10\"\n                            />{\" \"}\n                            {d.Title}\n                          </h6>\n                        </td>\n                        <td>{d.member}</td>\n                        <td>\n                          <span className=\"text-xs font-weight-bold\">\n                            {d.bud}{\" \"}\n                          </span>\n                        </td>\n                        <td>\n                          <div className=\"percent-progress\">{d.progress}</div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"uploadfile shadow-none\">\n                <Upload {...uploadProps}>\n                  <Button\n                    type=\"dashed\"\n                    className=\"ant-full-box\"\n                    icon={<ToTopOutlined />}\n                  >\n                    <span className=\"click\">Click to Upload</span>\n                  </Button>\n                </Upload>\n              </div>\n            </Card>\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={12} xl={8} className=\"mb-24\">\n            <Card bordered={false} className=\"criclebox h-full\">\n              <div className=\"timeline-box\">\n                <Title level={5}>Orders History</Title>\n                <Paragraph className=\"lastweek\" style={{ marginBottom: 24 }}>\n                  this month <span className=\"bnb2\">20%</span>\n                </Paragraph>\n\n                <Timeline\n                  pending=\"Recording...\"\n                  className=\"timelinelist\"\n                  reverse={reverse}\n                >\n                  {timelineList.map((t, index) => (\n                    <Timeline.Item color={t.color} key={index}>\n                      <Title level={5}>{t.title}</Title>\n                      <Text>{t.time}</Text>\n                    </Timeline.Item>\n                  ))}\n                </Timeline>\n                <Button\n                  type=\"primary\"\n                  className=\"width-100\"\n                  onClick={() => setReverse(!reverse)}\n                >\n                  {<MenuUnfoldOutlined />} REVERSE\n                </Button>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\SignUp.js",["96","97","98","99","100"],"\nimport React, { Component } from \"react\";\nimport { useHistory  } from \"react-router-dom\";\nimport {\n  Layout,\n  Menu,\n  Button,\n  Typography,\n  Card,\n  Form,\n  Input,\n  Checkbox,\n  message\n} from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  DribbbleOutlined,\n  TwitterOutlined,\n  InstagramOutlined,\n  GithubOutlined,\n} from \"@ant-design/icons\";\nimport usePostApi from \"../../hooks/usePostApi\";\n\nconst { Title } = Typography;\nconst { Header, Footer, Content } = Layout;\n\n\nconst SignUp = () => {\n  const { data, loading, error, postData } = usePostApi('auth/register');\n  const history = useHistory();\n  \n  const onFinish = async(values) => {\n    const requestBody = { name: values.Name, email: values.email, password: values.password };\n    const response = await postData(requestBody);\n    if (response) {\n      console.log(response);\n      sessionStorage.setItem(\"token\", response.token);\n      message.open({\n        type: 'success',\n        content: 'Registered Successfully',\n      });\n      history.push(\"/login\");\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div className=\"layout-default ant-layout layout-sign-up\">\n      <Header>\n        <div className=\"header-col header-brand\">\n          <h5>Task Collaboration Platform</h5>\n        </div>\n      </Header>\n\n      <Content className=\"p-0\">\n        <div className=\"sign-up-header\">\n          <div className=\"content\">\n            <Title>Sign Up</Title>\n          </div>\n        </div>\n\n        <Card\n          className=\"card-signup header-solid h-full ant-card pt-0\"\n          title={<h5>Register With</h5>}\n          bordered={false}\n        >\n          <Form\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            className=\"row-col\"\n          >\n            <Form.Item\n              name=\"Name\"\n              rules={[{ required: true, message: \"Please input your name!\" }]}\n            >\n              <Input placeholder=\"Name\" />\n            </Form.Item>\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Please input your email!\" }]}\n            >\n              <Input placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[{ required: true, message: \"Please input your password!\" }]}\n            >\n              <Input type=\"password\" placeholder=\"Password\" />\n            </Form.Item>\n\n            <Form.Item>\n              <Button style={{ width: \"100%\" }} type=\"primary\" htmlType=\"submit\">\n                SIGN UP\n              </Button>\n            </Form.Item>\n          </Form>\n\n          <p className=\"font-semibold text-muted text-center\">\n            Already have an account?{\" \"}\n            <Link to=\"/sign-in\" className=\"font-bold text-dark\">\n              Sign In\n            </Link>\n          </p>\n        </Card>\n      </Content>\n\n      <Footer>\n        <Menu mode=\"horizontal\">\n          <Menu.Item>Company</Menu.Item>\n          <Menu.Item>About Us</Menu.Item>\n          <Menu.Item>Teams</Menu.Item>\n          <Menu.Item>Products</Menu.Item>\n          <Menu.Item>Blogs</Menu.Item>\n          <Menu.Item>Pricing</Menu.Item>\n        </Menu>\n        <Menu mode=\"horizontal\" className=\"menu-nav-social\">\n          <Menu.Item>\n            <Link to=\"#\">\n              <DribbbleOutlined />\n            </Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to=\"#\">\n              <TwitterOutlined />\n            </Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to=\"#\">\n              <InstagramOutlined />\n            </Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to=\"#\">\n              <GithubOutlined />\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Footer>\n    </div>\n  );\n};\n\nexport default SignUp;\n","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\SignIn.js",["101","102","103","104","105","106"],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\Profile.js",["107","108","109","110","111","112","113","114","115","116"],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\layout\\Main.js",[],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\pages\\Member.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Radio,\r\n  Table,\r\n  Upload,\r\n  message,\r\n  Progress,\r\n  Button,\r\n  Avatar,\r\n  Typography,\r\n} from \"antd\";\r\nimport useAxios from \"../../hooks/useAxios\";\r\n\r\nimport ava6 from \"../../assets/images/logo-invision.svg\";\r\nimport face from \"../../assets/images/face-1.jpg\";\r\nimport face2 from \"../../assets/images/face-2.jpg\";\r\nimport face3 from \"../../assets/images/face-3.jpg\";\r\nimport face4 from \"../../assets/images/face-4.jpg\";\r\nimport face5 from \"../../assets/images/face-5.jpeg\";\r\nimport face6 from \"../../assets/images/face-6.jpeg\";\r\nimport pencil from \"../../assets/images/pencil.svg\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst { Title } = Typography;\r\n\r\n\r\nfunction Membeers() {\r\n  const userRequest = useAxios();\r\n  const [userLists, setUserLists] = useState([]);\r\n  const [loading, setLoading] =useState(false);\r\n  const onChange = (e) => console.log(`radio checked:${e.target.value}`);\r\n\r\n  const fetchUsers = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const users = await userRequest.execute({\r\n        url: \"users\",\r\n        method: \"GET\",\r\n      });\r\n      // console.log(\"Users:\", users);\r\n      setUserLists(users);\r\n      setLoading(false)\r\n    } catch (err) {\r\n      console.error(\"Error fetching users:\", err);\r\n    }\r\n  };\r\n\r\n   useEffect(() => {\r\n      fetchUsers();\r\n    }, []);\r\n\r\n    const columns = [\r\n      {\r\n        title: \"AUTHOR\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        render: (text) => text && text.trim() !== \"\" ? text : \"NA\",\r\n        width: \"32%\",\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        key: \"email\",\r\n        dataIndex: \"email\",\r\n        render: (text) => text && text.trim() !== \"\" ? text : \"NA\",\r\n      },\r\n      {\r\n        title: \"STATUS\",\r\n        key: \"status\",\r\n        dataIndex: \"status\",\r\n        render: (text) => text && text.trim() !== \"\" ? text : \"NA\",\r\n      },\r\n      {\r\n        title: \"EMPLOYED\",\r\n        key: \"_id\",\r\n        dataIndex: \"_id\",\r\n        render: (text) => text && text.trim() !== \"\" ? text : \"NA\",\r\n      },\r\n    ];\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"tabled\">\r\n        <Row gutter={[24, 0]}>\r\n          <Col xs=\"24\" xl={24}>\r\n            <Card\r\n              bordered={false}\r\n              className=\"criclebox tablespace mb-24\"\r\n              title=\"All Members\"\r\n             \r\n              \r\n            >\r\n              <div className=\"table-responsive\">\r\n                <Table\r\n                  columns={columns}\r\n                  loading={loading}\r\n                  dataSource={userLists}\r\n                  pagination={false}\r\n                  className=\"ant-border-space\"\r\n                />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Membeers;\r\n","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\Masters\\TeamsList.jsx",["134","135","136","137","138","139","140","141","142","143"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Tag,\r\n  Card,\r\n  Typography,\r\n  Space,\r\n  Button,\r\n  Modal,\r\n  Input,\r\n  Select,\r\n  message,\r\n  Tooltip,\r\n  Col,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PlusOutlined,\r\n  UserAddOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { MdAssignmentAdd } from \"react-icons/md\";\r\nimport usePostApi from \"../../hooks/usePostApi\";\r\nimport useAxios from \"../../hooks/useAxios\";\r\n\r\nconst { Title } = Typography;\r\nconst { confirm } = Modal;\r\nconst { Option } = Select;\r\n\r\nconst TeamList = () => {\r\n  const { data, error, postData } = usePostApi(\"team/create\");\r\n  const {\r\n    data: data2,\r\n    loading: loading2,\r\n    error: error2,\r\n    postData: postData2,\r\n  } = usePostApi(\"/team/add-member\");\r\n  const TeamLists = useAxios();\r\n\r\n  const [teams, setTeams] = useState([]);\r\n  const userRequest = useAxios();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isInviteModalVisible, setIsInviteModalVisible] = useState(false);\r\n  const [isTaskModalVisible, setIsTaskModalVisible] = useState(false);\r\n  const [newTeamName, setNewTeamName] = useState(\"\");\r\n  const [selectedMembers, setSelectedMembers] = useState([]);\r\n  const [selectedTeam, setSelectedTeam] = useState(null);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [task, setTask] = useState(\"\");\r\n  const [inviteEmail, setInviteEmail] = useState(\"\");\r\n  const [userLists, setUserLists] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [Sselectedteams, setSelectedteams] = useState([]);\r\n\r\n  const TeamList = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const req = { status: \"\", priority: \"\", dueDate: \"\" };\r\n      const res = await TeamLists.execute({\r\n        url: \"team\",\r\n        method: \"GET\",\r\n      });\r\n      console.log(\"team:\", res);\r\n      setTeams(res);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(\"Error fetching users:\", err);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const users = await userRequest.execute({\r\n        url: \"users\",\r\n        method: \"GET\",\r\n      });\r\n      // console.log(\"Users:\", users);\r\n      setUserLists(users);\r\n    } catch (err) {\r\n      console.error(\"Error fetching users:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    TeamList();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const showAddTeamModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const showInviteUserModal = (record) => {\r\n    setIsInviteModalVisible(true);\r\n    setSelectedteams(record._id);\r\n    console.log(record);\r\n  };\r\n\r\n  // Handle Adding a New Team\r\n  const handleAddTeam = () => {\r\n    if (!newTeamName || selectedMembers.length === 0) {\r\n      message.error(\"Please enter a team name and select members.\");\r\n      return;\r\n    }\r\n    const res = postData({\r\n      name: newTeamName,\r\n      memberIds: selectedMembers,\r\n    });\r\n    if (res) {\r\n      setSelectedMembers([]);\r\n      setNewTeamName(\"\");\r\n      setIsModalVisible(false);\r\n      message.success(\"Team added successfully!\");\r\n      TeamList();\r\n    }\r\n  };\r\n\r\n  // Delete a Team\r\n  const handleDelete = (id) => {\r\n    confirm({\r\n      title: \"Are you sure you want to delete this team?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: \"Yes, Delete\",\r\n      okType: \"danger\",\r\n      cancelText: \"Cancel\",\r\n      onOk() {\r\n        setTeams(teams.filter((team) => team.id !== id));\r\n        message.success(\"Team deleted successfully!\");\r\n      },\r\n    });\r\n  };\r\n\r\n  // Show Assign Task Modal\r\n  const showAssignTaskModal = () => {\r\n    setIsTaskModalVisible(true);\r\n  };\r\nconsole.log(selectedMembers);\r\n\r\n  const handleInviteUser = async () => {\r\n    if (!inviteEmail) {\r\n      message.error(\"Please enter a valid email.\");\r\n      return;\r\n    }\r\n    const res = await postData2({\r\n      teamId: Sselectedteams,\r\n      userId: selectedMembers,\r\n      email: inviteEmail,\r\n    });\r\n    if (res) {\r\n      message.success(\r\n        `Invitation sent to ${inviteEmail} to join ${selectedTeam}!`\r\n      );\r\n      setIsInviteModalVisible(false);\r\n      setInviteEmail(\"\"); // Reset email input\r\n    }\r\n  };\r\n\r\n  // Handle Assigning Task\r\n  const handleAssignTask = () => {\r\n    if (!selectedTeam || !selectedUser || !task) {\r\n      message.error(\"Please select a team, user, and enter a task.\");\r\n      return;\r\n    }\r\n\r\n    message.success(\r\n      `Task \"${task}\" assigned to ${selectedUser} in ${selectedTeam}.`\r\n    );\r\n    setIsTaskModalVisible(false);\r\n    setTask(\"\");\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Team Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Members\",\r\n      dataIndex: \"members\",\r\n      key: \"members\",\r\n      render: (members) => (\r\n        <>\r\n          {members.map((member) => (\r\n            <Tag key={member._id} color=\"blue\">\r\n              {member.name}\r\n            </Tag>\r\n          ))}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      width: \"20%\",\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          {/* <Tooltip title=\"Assign Task\">\r\n            <Button size=\"small\" type=\"primary\" onClick={() => showAssignTaskModal(record)}>\r\n              <MdAssignmentAdd size={15} />\r\n            </Button>\r\n          </Tooltip> */}\r\n\r\n          <Tooltip title=\"Invite User\">\r\n            <Button\r\n              size=\"small\"\r\n              type=\"default\"\r\n              onClick={() => showInviteUserModal(record)}\r\n            >\r\n              <UserAddOutlined size={15} />\r\n            </Button>\r\n          </Tooltip>\r\n\r\n          <Tooltip title=\"Delete Team\">\r\n            <Button\r\n            disabled\r\n              type=\"primary\"\r\n              danger\r\n              size=\"small\"\r\n              onClick={() => handleDelete(record._id)}\r\n            >\r\n              <DeleteOutlined size={15} />\r\n            </Button>\r\n          </Tooltip>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        margin: \"20px\",\r\n        padding: \"20px\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.1)\",\r\n      }}\r\n    >\r\n      <Title level={5} style={{ textAlign: \"start\", marginBottom: \"20px\" }}>\r\n        Team Management\r\n      </Title>\r\n      <Button\r\n        type=\"primary\"\r\n        icon={<PlusOutlined />}\r\n        onClick={showAddTeamModal}\r\n        style={{ marginBottom: \"10px\" }}\r\n      >\r\n        Add Team\r\n      </Button>\r\n      <Table\r\n        dataSource={teams}\r\n        columns={columns}\r\n        loading={loading}\r\n        rowKey=\"id\"\r\n        pagination={{ pageSize: 5 }}\r\n        bordered\r\n        size=\"small\"\r\n      />\r\n\r\n      {/* Add Team Modal */}\r\n      <Modal\r\n        title=\"Create a New Team\"\r\n        open={isModalVisible}\r\n        onOk={handleAddTeam}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        maskClosable={false} \r\n      >\r\n        <Input\r\n          placeholder=\"Enter Team Name\"\r\n          value={newTeamName}\r\n          onChange={(e) => setNewTeamName(e.target.value)}\r\n          style={{ marginBottom: 10 }}\r\n        />\r\n\r\n        <Select\r\n          mode=\"multiple\"\r\n          placeholder=\"Select team members\"\r\n          style={{ width: \"100%\" }}\r\n          value={selectedMembers}\r\n          onChange={(value) => setSelectedMembers(value)}\r\n        >\r\n          {userLists.map((user) => (\r\n            <Option key={user._id} value={user._id}>\r\n              {user.name || user._id}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Modal>\r\n\r\n      {/* Assign Task Modal */}\r\n      <Modal\r\n        title=\"Assign a Task\"\r\n        open={isTaskModalVisible}\r\n        onOk={handleAssignTask}\r\n        onCancel={() => setIsTaskModalVisible(false)}\r\n        maskClosable={false} \r\n      >\r\n        <Select\r\n          placeholder=\"Select Team\"\r\n          style={{ width: \"100%\", marginBottom: 10 }}\r\n          onChange={(value) => setSelectedTeam(value)}\r\n        >\r\n          {teams.map((team) => (\r\n            <Option key={team.id} value={team.teamName}>\r\n              {team.teamName}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n        <Select\r\n          placeholder=\"Select Member\"\r\n          style={{ width: \"100%\", marginBottom: 10 }}\r\n          onChange={(value) => setSelectedUser(value)}\r\n        >\r\n          {teams\r\n            .flatMap((team) => team.members)\r\n            .map((member, index) => (\r\n              <Option key={index} value={member}>\r\n                {member}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n        <Input\r\n          placeholder=\"Enter Task\"\r\n          value={task}\r\n          onChange={(e) => setTask(e.target.value)}\r\n        />\r\n      </Modal>\r\n\r\n      {/* Invite User Modal */}\r\n      <Modal\r\n        title=\"Invite a User to Join Team\"\r\n        open={isInviteModalVisible}\r\n        onOk={handleInviteUser}\r\n        onCancel={() => setIsInviteModalVisible(false)}\r\n        maskClosable={false} \r\n      >\r\n        <Col>\r\n          <Select\r\n            mode=\"multiple\"\r\n            placeholder=\"Select team members\"\r\n            style={{ width: \"100%\" }}\r\n            value={selectedMembers}\r\n            onChange={(value) => setSelectedMembers(value)}\r\n          >\r\n            {userLists.map((user) => (\r\n              <Option key={user._id} value={user._id}>\r\n                {user.name || user._id}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n        <br />\r\n        <Col>\r\n          <Input\r\n            placeholder=\"Enter Email Address\"\r\n            value={inviteEmail}\r\n            onChange={(e) => setInviteEmail(e.target.value)}\r\n            style={{ marginBottom: 10 }}\r\n          />\r\n        </Col>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TeamList;\r\n","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\Masters\\TaskList.jsx",["144","145","146","147","148","149","150","151","152","153","154","155"],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\layout\\Footer.js",[],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\layout\\Sidenav.js",["156","157","158"],"\nimport { useState } from \"react\";\nimport { Menu, Button } from \"antd\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { MdOutlineDashboard } from \"react-icons/md\";\nimport { FaTasks } from \"react-icons/fa\";\nimport { RiTeamLine } from \"react-icons/ri\";\n\n\nfunction Sidenav({ color }) {\n  const { pathname } = useLocation();\n  const page = pathname.replace(\"/\", \"\");\n\n\n  const tables = [\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      key={0}\n    >\n      <path\n        d=\"M9 2C8.44772 2 8 2.44772 8 3C8 3.55228 8.44772 4 9 4H11C11.5523 4 12 3.55228 12 3C12 2.44772 11.5523 2 11 2H9Z\"\n        fill={color}\n      ></path>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4 5C4 3.89543 4.89543 3 6 3C6 4.65685 7.34315 6 9 6H11C12.6569 6 14 4.65685 14 3C15.1046 3 16 3.89543 16 5V16C16 17.1046 15.1046 18 14 18H6C4.89543 18 4 17.1046 4 16V5ZM7 9C6.44772 9 6 9.44772 6 10C6 10.5523 6.44772 11 7 11H7.01C7.56228 11 8.01 10.5523 8.01 10C8.01 9.44772 7.56228 9 7.01 9H7ZM10 9C9.44772 9 9 9.44772 9 10C9 10.5523 9.44772 11 10 11H13C13.5523 11 14 10.5523 14 10C14 9.44772 13.5523 9 13 9H10ZM7 13C6.44772 13 6 13.4477 6 14C6 14.5523 6.44772 15 7 15H7.01C7.56228 15 8.01 14.5523 8.01 14C8.01 13.4477 7.56228 13 7.01 13H7ZM10 13C9.44772 13 9 13.4477 9 14C9 14.5523 9.44772 15 10 15H13C13.5523 15 14 14.5523 14 14C14 13.4477 13.5523 13 13 13H10Z\"\n        fill={color}\n      ></path>\n    </svg>,\n  ];\n\n\n  const profile = [\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      key={0}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10ZM12 7C12 8.10457 11.1046 9 10 9C8.89543 9 8 8.10457 8 7C8 5.89543 8.89543 5 10 5C11.1046 5 12 5.89543 12 7ZM9.99993 11C7.98239 11 6.24394 12.195 5.45374 13.9157C6.55403 15.192 8.18265 16 9.99998 16C11.8173 16 13.4459 15.1921 14.5462 13.9158C13.756 12.195 12.0175 11 9.99993 11Z\"\n        fill={color}\n      ></path>\n    </svg>,\n  ];\n\n\n  return (\n    <>\n      <div className=\"brand\">\n        <span>SideBar</span>\n      </div>\n      <hr />\n      <Menu theme=\"light\" mode=\"inline\">\n        \n        <Menu.Item key=\"2\">\n          <NavLink to=\"/tasks\">\n            <span\n              className=\"icon\"\n              style={{\n                background: page === \"profile\" ? color : \"\",\n              }}\n            >\n              <FaTasks />\n            </span>\n            <span className=\"label\">Tasks</span>\n          </NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"4\">\n          <NavLink to=\"/teams\">\n            <span\n              className=\"icon\"\n              style={{\n                background: page === \"tables\" ? color : \"\",\n              }}\n            >\n             <RiTeamLine />\n            </span>\n            <span className=\"label\">Teams</span>\n          </NavLink>\n        </Menu.Item>\n\n        <Menu.Item key=\"5\">\n          <NavLink to=\"/members\">\n            <span\n              className=\"icon\"\n              style={{\n                background: page === \"tables\" ? color : \"\",\n              }}\n            >\n              {tables}\n            </span>\n            <span className=\"label\">Members</span>\n          </NavLink>\n        </Menu.Item>\n\n        <Menu.Item className=\"menu-item-header\" key=\"5\">\n          Account Pages\n        </Menu.Item>\n\n        <Menu.Item key=\"6\">\n          <NavLink to=\"/profile\">\n            <span\n              className=\"icon\"\n              style={{\n                background: page === \"profile\" ? color : \"\",\n              }}\n            >\n              {profile}\n            </span>\n            <span className=\"label\">Profile</span>\n          </NavLink>\n        </Menu.Item>\n      </Menu>\n    </>\n  );\n}\n\nexport default Sidenav;\n","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\layout\\Header.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\forms\\TaskListForm.jsx",["175","176","177"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Select, Button, Space, Row, Col,message } from \"antd\";\r\nimport useAxios from \"../../hooks/useAxios\";\r\nimport usePostApi from \"../../hooks/usePostApi\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst TaskForm = ({ initialValues, onCancel, action, tabCHange }) => {\r\n  // console.log(initialValues);\r\n\r\n  const { data, error, postData } = usePostApi(\"tasks/updateTask\");\r\n  const userRequest = useAxios();\r\n  const [form] = Form.useForm();\r\n  const [userLists, setUserLists] = useState([]);\r\n  const [localInitialValues, setLocalInitialValues] = useState(initialValues);\r\n\r\n  // Function to fetch users\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const users = await userRequest.execute({\r\n        url: \"users\",\r\n        method: \"GET\",\r\n      });\r\n      console.log(\"Users:\", users);\r\n      setUserLists(users);\r\n    } catch (err) {\r\n      console.error(\"Error fetching users:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (initialValues && userLists.length > 0) {\r\n      let updatedValues = { ...initialValues };\r\n      if (\r\n        updatedValues.assignedTo &&\r\n        typeof updatedValues.assignedTo === \"string\"\r\n      ) {\r\n        const assignedUser = userLists.find(\r\n          (user) => user._id === updatedValues.assignedTo\r\n        );\r\n        if (assignedUser) {\r\n          updatedValues.assignedTo = {\r\n            value: assignedUser._id,\r\n            label: assignedUser.name || assignedUser._id,\r\n          };\r\n        }\r\n      }\r\n      // Update local state and form fields.\r\n      setLocalInitialValues(updatedValues);\r\n      form.setFieldsValue(updatedValues);\r\n    }\r\n  }, [initialValues, userLists, form]);\r\n\r\n  // Handle form submission.\r\n  const handleSubmit = (values) => {\r\n    // const { title, description, dueDate, priority, status, assignedTo , id} = req.body;\r\n    const res = postData({\r\n      title: values.title,\r\n      description: values.description,\r\n      dueDate: values.dueDate,\r\n      priority: values.priority,\r\n      status: values.status,\r\n      assignedTo: values.assignedTo.value,\r\n      id: initialValues._id,\r\n    });\r\n    if (res) {\r\n      console.log(res);\r\n      message.success(\"Task updated successfully!\");\r\n      tabCHange();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"vertical\"\r\n      onFinish={handleSubmit}\r\n      // Use the local state to persist values\r\n      initialValues={localInitialValues}\r\n      style={{ borderRadius: \"8px\", background: \"#f9f9f9\", padding: 16 }}\r\n    >\r\n      <Row gutter={16}>\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"title\"\r\n            label=\"Task Title\"\r\n            rules={[{ required: true, message: \"Please enter a task title!\" }]}\r\n          >\r\n            <Input placeholder=\"Enter task title\" />\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            rules={[\r\n              { required: true, message: \"Please enter a task description!\" },\r\n            ]}\r\n          >\r\n            <Input.TextArea rows={1} placeholder=\"Enter task description\" />\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"priority\"\r\n            label=\"Priority\"\r\n            rules={[{ required: true, message: \"Please select a priority!\" }]}\r\n          >\r\n            <Select placeholder=\"Select priority\" style={{ width: \"100%\" }}>\r\n              <Option value=\"Low\">Low</Option>\r\n              <Option value=\"Medium\">Medium</Option>\r\n              <Option value=\"High\">High</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={16}>\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"assignedTo\"\r\n            label=\"Assigned To\"\r\n            rules={[{ required: true, message: \"Please select an assignee!\" }]}\r\n          >\r\n            <Select\r\n              placeholder=\"Select assignee\"\r\n              style={{ width: \"100%\" }}\r\n              labelInValue\r\n            >\r\n              {userLists.map((user) => (\r\n                <Option key={user._id} value={user._id}>\r\n                  {user.name || user._id}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"status\"\r\n            label=\"Status\"\r\n            rules={[\r\n              { required: true, message: \"Please select the task status!\" },\r\n            ]}\r\n          >\r\n            <Select placeholder=\"Select status\" style={{ width: \"100%\" }}>\r\n              <Option value=\"To Do\">To Do</Option>\r\n              <Option value=\"In Progress\">In Progress</Option>\r\n              <Option value=\"Done\">Done</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Space style={{ width: \"100%\", justifyContent: \"end\" }}>\r\n        <Button onClick={onCancel}>Cancel</Button>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          {initialValues ? \"Update Task\" : \"Add Task\"}\r\n        </Button>\r\n      </Space>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\hooks\\usePostApi.js",[],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\axiosConfig.js",[],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\forms\\TaskForm1.jsx",["178","179","180","181"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, DatePicker, Input, Select, Button, Space, Row, Col, message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport usePostApi from \"../../hooks/usePostApi\";\r\nimport useAxios from \"../../hooks/useAxios\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst TaskForm = ({setActiveTabKey, onSubmit}) => {\r\n  const { data, loading, error, postData } = usePostApi(\"tasks/createTask\");\r\n  const userList =  useAxios();\r\n  const [form] = Form.useForm();\r\n  const [userLists, setUserList] = useState([]);\r\n\r\n  const UserList = async () => {\r\n    try {\r\n      const users = await userList.execute({\r\n        url: 'users',\r\n        method: 'GET'\r\n      });\r\n      console.log('Users:', users);\r\n      setUserList(users);\r\n    } catch (err) {\r\n      console.error('Error fetching users:', err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    UserList();\r\n  }, []);\r\n\r\n  const handleSubmit = (values) => {\r\n    const res = postData(values);\r\n    if (res) {\r\n      console.log(res);\r\n      message.success(\"Task created successfully!\");\r\n      setActiveTabKey(\"1\");\r\n      setTimeout(() => {\r\n        onSubmit();\r\n      }, 500);\r\n    }\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"vertical\"\r\n      onFinish={handleSubmit}\r\n      style={{ borderRadius: \"8px\", background: \"#f9f9f9\" }}\r\n    >\r\n      <Row gutter={16}>\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"title\"\r\n            label=\"Task Title\"\r\n            rules={[{ required: true, message: \"Please enter a task title!\" }]}\r\n          >\r\n            <Input placeholder=\"Enter task title\" />\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            rules={[\r\n              { required: true, message: \"Please enter a task description!\" },\r\n            ]}\r\n          >\r\n            <Input.TextArea rows={1} placeholder=\"Enter task description\" />\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"priority\"\r\n            label=\"Priority\"\r\n            rules={[{ required: true, message: \"Please select a priority!\" }]}\r\n          >\r\n            <Select placeholder=\"Select priority\" style={{ width: \"100%\" }}>\r\n              <Option value=\"Low\">Low</Option>\r\n              <Option value=\"Medium\">Medium</Option>\r\n              <Option value=\"High\">High</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={16}>\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"assignedTo\"\r\n            label=\"Assigned To\"\r\n            rules={[{ required: true, message: \"Please select an assignee!\" }]}\r\n            \r\n          >\r\n            <Select placeholder=\"Select assignee\" style={{ width: \"100%\" }}>\r\n              {userLists.map((user) => (\r\n                <Option key={user._id} value={user._id}>\r\n                  {user.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"status\"\r\n            label=\"Status\"\r\n            rules={[\r\n              { required: true, message: \"Please select the task status!\" },\r\n            ]}\r\n          >\r\n            <Select placeholder=\"Select status\" style={{ width: \"100%\" }}>\r\n              <Option value=\"To Do\">To Do</Option>\r\n              <Option value=\"In Progress\">In Progress</Option>\r\n              <Option value=\"Done\">Done</Option>\r\n              {/* enum: ['To Do', 'In Progress', 'Done'], */}\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} md={8}>\r\n          <Form.Item\r\n            name=\"dueDate\"\r\n            label=\"Due Date\"\r\n            rules={[{ required: true, message: \"Please select a due date!\" }]}\r\n          >\r\n            <DatePicker\r\n              style={{ width: \"100%\" }}\r\n              format=\"YYYY-MM-DD\"\r\n              disabledDate={(current) => {\r\n                // Disable all dates before today\r\n                return current && current < moment().startOf(\"day\");\r\n              }}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Space style={{ width: \"100%\", justifyContent: \"end\" }}>\r\n        {/* <Button onClick={onCancel}>Cancel</Button> */}\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Add Task\r\n        </Button>\r\n      </Space>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\hooks\\useAxios.js",[],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\components\\model\\UpdateUserModal.jsx",["182","183","184","185"],"C:\\Users\\mrpat\\eduonix\\MERN FULL STACK\\Task Collaboration Platform\\client\\src\\hooks\\useFormData.jsx",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":1,"column":10,"nodeType":"192","messageId":"193","endLine":1,"endColumn":19},{"ruleId":"190","severity":1,"message":"194","line":19,"column":7,"nodeType":"192","messageId":"193","endLine":19,"endColumn":13},{"ruleId":"190","severity":1,"message":"195","line":20,"column":3,"nodeType":"192","messageId":"193","endLine":20,"endColumn":16},{"ruleId":"190","severity":1,"message":"196","line":36,"column":8,"nodeType":"192","messageId":"193","endLine":36,"endColumn":12},{"ruleId":"190","severity":1,"message":"197","line":2,"column":17,"nodeType":"192","messageId":"193","endLine":2,"endColumn":26},{"ruleId":"190","severity":1,"message":"198","line":12,"column":3,"nodeType":"192","messageId":"193","endLine":12,"endColumn":11},{"ruleId":"190","severity":1,"message":"199","line":29,"column":11,"nodeType":"192","messageId":"193","endLine":29,"endColumn":15},{"ruleId":"190","severity":1,"message":"200","line":29,"column":17,"nodeType":"192","messageId":"193","endLine":29,"endColumn":24},{"ruleId":"190","severity":1,"message":"201","line":29,"column":26,"nodeType":"192","messageId":"193","endLine":29,"endColumn":31},{"ruleId":"190","severity":1,"message":"197","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"202","line":13,"column":3,"nodeType":"192","messageId":"193","endLine":13,"endColumn":9},{"ruleId":"190","severity":1,"message":"199","line":31,"column":11,"nodeType":"192","messageId":"193","endLine":31,"endColumn":15},{"ruleId":"190","severity":1,"message":"200","line":31,"column":17,"nodeType":"192","messageId":"193","endLine":31,"endColumn":24},{"ruleId":"190","severity":1,"message":"201","line":31,"column":26,"nodeType":"192","messageId":"193","endLine":31,"endColumn":31},{"ruleId":"190","severity":1,"message":"203","line":33,"column":9,"nodeType":"192","messageId":"193","endLine":33,"endColumn":16},{"ruleId":"190","severity":1,"message":"204","line":9,"column":3,"nodeType":"192","messageId":"193","endLine":9,"endColumn":7},{"ruleId":"190","severity":1,"message":"202","line":13,"column":3,"nodeType":"192","messageId":"193","endLine":13,"endColumn":9},{"ruleId":"190","severity":1,"message":"205","line":14,"column":3,"nodeType":"192","messageId":"193","endLine":14,"endColumn":9},{"ruleId":"190","severity":1,"message":"206","line":15,"column":3,"nodeType":"192","messageId":"193","endLine":15,"endColumn":10},{"ruleId":"190","severity":1,"message":"207","line":35,"column":10,"nodeType":"192","messageId":"193","endLine":35,"endColumn":18},{"ruleId":"190","severity":1,"message":"208","line":35,"column":20,"nodeType":"192","messageId":"193","endLine":35,"endColumn":31},{"ruleId":"190","severity":1,"message":"209","line":45,"column":13,"nodeType":"192","messageId":"193","endLine":45,"endColumn":16},{"ruleId":"210","severity":1,"message":"211","line":60,"column":6,"nodeType":"212","endLine":60,"endColumn":8,"suggestions":"213"},{"ruleId":"190","severity":1,"message":"214","line":62,"column":9,"nodeType":"192","messageId":"193","endLine":62,"endColumn":18},{"ruleId":"190","severity":1,"message":"199","line":90,"column":9,"nodeType":"192","messageId":"193","endLine":90,"endColumn":13},{"ruleId":"190","severity":1,"message":"215","line":6,"column":3,"nodeType":"192","messageId":"193","endLine":6,"endColumn":8},{"ruleId":"190","severity":1,"message":"205","line":8,"column":3,"nodeType":"192","messageId":"193","endLine":8,"endColumn":9},{"ruleId":"190","severity":1,"message":"206","line":9,"column":3,"nodeType":"192","messageId":"193","endLine":9,"endColumn":10},{"ruleId":"190","severity":1,"message":"216","line":10,"column":3,"nodeType":"192","messageId":"193","endLine":10,"endColumn":11},{"ruleId":"190","severity":1,"message":"217","line":11,"column":3,"nodeType":"192","messageId":"193","endLine":11,"endColumn":9},{"ruleId":"190","severity":1,"message":"218","line":12,"column":3,"nodeType":"192","messageId":"193","endLine":12,"endColumn":9},{"ruleId":"190","severity":1,"message":"219","line":17,"column":8,"nodeType":"192","messageId":"193","endLine":17,"endColumn":12},{"ruleId":"190","severity":1,"message":"220","line":18,"column":8,"nodeType":"192","messageId":"193","endLine":18,"endColumn":12},{"ruleId":"190","severity":1,"message":"221","line":19,"column":8,"nodeType":"192","messageId":"193","endLine":19,"endColumn":13},{"ruleId":"190","severity":1,"message":"222","line":20,"column":8,"nodeType":"192","messageId":"193","endLine":20,"endColumn":13},{"ruleId":"190","severity":1,"message":"223","line":21,"column":8,"nodeType":"192","messageId":"193","endLine":21,"endColumn":13},{"ruleId":"190","severity":1,"message":"224","line":22,"column":8,"nodeType":"192","messageId":"193","endLine":22,"endColumn":13},{"ruleId":"190","severity":1,"message":"225","line":23,"column":8,"nodeType":"192","messageId":"193","endLine":23,"endColumn":13},{"ruleId":"190","severity":1,"message":"226","line":24,"column":8,"nodeType":"192","messageId":"193","endLine":24,"endColumn":14},{"ruleId":"190","severity":1,"message":"227","line":27,"column":9,"nodeType":"192","messageId":"193","endLine":27,"endColumn":14},{"ruleId":"190","severity":1,"message":"228","line":34,"column":9,"nodeType":"192","messageId":"193","endLine":34,"endColumn":17},{"ruleId":"210","severity":1,"message":"229","line":53,"column":8,"nodeType":"212","endLine":53,"endColumn":10,"suggestions":"230"},{"ruleId":"190","severity":1,"message":"231","line":17,"column":3,"nodeType":"192","messageId":"193","endLine":17,"endColumn":15},{"ruleId":"190","severity":1,"message":"232","line":23,"column":10,"nodeType":"192","messageId":"193","endLine":23,"endColumn":25},{"ruleId":"190","severity":1,"message":"199","line":32,"column":11,"nodeType":"192","messageId":"193","endLine":32,"endColumn":15},{"ruleId":"190","severity":1,"message":"201","line":32,"column":17,"nodeType":"192","messageId":"193","endLine":32,"endColumn":22},{"ruleId":"190","severity":1,"message":"233","line":34,"column":11,"nodeType":"192","messageId":"193","endLine":34,"endColumn":16},{"ruleId":"190","severity":1,"message":"234","line":35,"column":14,"nodeType":"192","messageId":"193","endLine":35,"endColumn":22},{"ruleId":"190","severity":1,"message":"235","line":36,"column":12,"nodeType":"192","messageId":"193","endLine":36,"endColumn":18},{"ruleId":"190","severity":1,"message":"209","line":59,"column":13,"nodeType":"192","messageId":"193","endLine":59,"endColumn":16},{"ruleId":"210","severity":1,"message":"236","line":88,"column":6,"nodeType":"212","endLine":88,"endColumn":8,"suggestions":"237"},{"ruleId":"190","severity":1,"message":"238","line":135,"column":9,"nodeType":"192","messageId":"193","endLine":135,"endColumn":28},{"ruleId":"190","severity":1,"message":"239","line":11,"column":3,"nodeType":"192","messageId":"193","endLine":11,"endColumn":7},{"ruleId":"190","severity":1,"message":"240","line":12,"column":3,"nodeType":"192","messageId":"193","endLine":12,"endColumn":8},{"ruleId":"190","severity":1,"message":"241","line":13,"column":3,"nodeType":"192","messageId":"193","endLine":13,"endColumn":7},{"ruleId":"190","severity":1,"message":"201","line":33,"column":17,"nodeType":"192","messageId":"193","endLine":33,"endColumn":22},{"ruleId":"190","severity":1,"message":"242","line":43,"column":10,"nodeType":"192","messageId":"193","endLine":43,"endColumn":24},{"ruleId":"190","severity":1,"message":"243","line":43,"column":26,"nodeType":"192","messageId":"193","endLine":43,"endColumn":43},{"ruleId":"190","severity":1,"message":"209","line":52,"column":13,"nodeType":"192","messageId":"193","endLine":52,"endColumn":16},{"ruleId":"190","severity":1,"message":"244","line":67,"column":9,"nodeType":"192","messageId":"193","endLine":67,"endColumn":19},{"ruleId":"210","severity":1,"message":"211","line":113,"column":6,"nodeType":"212","endLine":113,"endColumn":12,"suggestions":"245"},{"ruleId":"190","severity":1,"message":"246","line":153,"column":9,"nodeType":"192","messageId":"193","endLine":153,"endColumn":19},{"ruleId":"247","severity":1,"message":"248","line":243,"column":13,"nodeType":"249","messageId":"250","endLine":243,"endColumn":15},{"ruleId":"247","severity":1,"message":"248","line":327,"column":19,"nodeType":"249","messageId":"250","endLine":327,"endColumn":21},{"ruleId":"190","severity":1,"message":"251","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":18},{"ruleId":"190","severity":1,"message":"217","line":3,"column":16,"nodeType":"192","messageId":"193","endLine":3,"endColumn":22},{"ruleId":"190","severity":1,"message":"252","line":5,"column":10,"nodeType":"192","messageId":"193","endLine":5,"endColumn":28},{"ruleId":"190","severity":1,"message":"240","line":12,"column":3,"nodeType":"192","messageId":"193","endLine":12,"endColumn":8},{"ruleId":"190","severity":1,"message":"253","line":13,"column":3,"nodeType":"192","messageId":"193","endLine":13,"endColumn":9},{"ruleId":"190","severity":1,"message":"202","line":15,"column":3,"nodeType":"192","messageId":"193","endLine":15,"endColumn":9},{"ruleId":"190","severity":1,"message":"254","line":22,"column":8,"nodeType":"192","messageId":"193","endLine":22,"endColumn":14},{"ruleId":"190","severity":1,"message":"255","line":30,"column":7,"nodeType":"192","messageId":"193","endLine":30,"endColumn":11},{"ruleId":"190","severity":1,"message":"256","line":136,"column":7,"nodeType":"192","messageId":"193","endLine":136,"endColumn":11},{"ruleId":"190","severity":1,"message":"227","line":181,"column":11,"nodeType":"192","messageId":"193","endLine":181,"endColumn":16},{"ruleId":"190","severity":1,"message":"257","line":181,"column":18,"nodeType":"192","messageId":"193","endLine":181,"endColumn":22},{"ruleId":"190","severity":1,"message":"258","line":183,"column":10,"nodeType":"192","messageId":"193","endLine":183,"endColumn":17},{"ruleId":"190","severity":1,"message":"259","line":184,"column":10,"nodeType":"192","messageId":"193","endLine":184,"endColumn":21},{"ruleId":"190","severity":1,"message":"260","line":184,"column":23,"nodeType":"192","messageId":"193","endLine":184,"endColumn":37},{"ruleId":"190","severity":1,"message":"199","line":185,"column":11,"nodeType":"192","messageId":"193","endLine":185,"endColumn":15},{"ruleId":"190","severity":1,"message":"200","line":185,"column":17,"nodeType":"192","messageId":"193","endLine":185,"endColumn":24},{"ruleId":"190","severity":1,"message":"201","line":185,"column":26,"nodeType":"192","messageId":"193","endLine":185,"endColumn":31},{"ruleId":"190","severity":1,"message":"261","line":250,"column":9,"nodeType":"192","messageId":"193","endLine":250,"endColumn":19},{"ruleId":"190","severity":1,"message":"262","line":251,"column":9,"nodeType":"192","messageId":"193","endLine":251,"endColumn":19},{"ruleId":"190","severity":1,"message":"199","line":11,"column":11,"nodeType":"192","messageId":"193","endLine":11,"endColumn":15},{"ruleId":"190","severity":1,"message":"201","line":11,"column":17,"nodeType":"192","messageId":"193","endLine":11,"endColumn":22},{"ruleId":"210","severity":1,"message":"229","line":33,"column":6,"nodeType":"212","endLine":33,"endColumn":8,"suggestions":"263"},{"ruleId":"190","severity":1,"message":"199","line":10,"column":11,"nodeType":"192","messageId":"193","endLine":10,"endColumn":15},{"ruleId":"190","severity":1,"message":"200","line":10,"column":17,"nodeType":"192","messageId":"193","endLine":10,"endColumn":24},{"ruleId":"190","severity":1,"message":"201","line":10,"column":26,"nodeType":"192","messageId":"193","endLine":10,"endColumn":31},{"ruleId":"210","severity":1,"message":"264","line":30,"column":6,"nodeType":"212","endLine":30,"endColumn":8,"suggestions":"265"},{"ruleId":"190","severity":1,"message":"266","line":8,"column":11,"nodeType":"192","messageId":"193","endLine":8,"endColumn":16},{"ruleId":"190","severity":1,"message":"267","line":8,"column":18,"nodeType":"192","messageId":"193","endLine":8,"endColumn":26},{"ruleId":"190","severity":1,"message":"201","line":8,"column":28,"nodeType":"192","messageId":"193","endLine":8,"endColumn":33},{"ruleId":"210","severity":1,"message":"268","line":32,"column":4,"nodeType":"212","endLine":32,"endColumn":16,"suggestions":"269"},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'socket' is assigned a value but never used.","'RightOutlined' is defined but never used.","'card' is defined but never used.","'Component' is defined but never used.","'Checkbox' is defined but never used.","'data' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Switch' is defined but never used.","'history' is assigned a value but never used.","'List' is defined but never used.","'Upload' is defined but never used.","'message' is defined but never used.","'imageURL' is assigned a value but never used.","'setImageURL' is assigned a value but never used.","'req' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'TasskLists'. Either include it or remove the dependency array.","ArrayExpression",["272"],"'getBase64' is assigned a value but never used.","'Radio' is defined but never used.","'Progress' is defined but never used.","'Button' is defined but never used.","'Avatar' is defined but never used.","'ava6' is defined but never used.","'face' is defined but never used.","'face2' is defined but never used.","'face3' is defined but never used.","'face4' is defined but never used.","'face5' is defined but never used.","'face6' is defined but never used.","'pencil' is defined but never used.","'Title' is assigned a value but never used.","'onChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["273"],"'EditOutlined' is defined but never used.","'MdAssignmentAdd' is defined but never used.","'data2' is assigned a value but never used.","'loading2' is assigned a value but never used.","'error2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'TeamList' and 'fetchUsers'. Either include them or remove the dependency array.",["274"],"'showAssignTaskModal' is assigned a value but never used.","'Flex' is defined but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'isModalVisible' is assigned a value but never used.","'setIsModalVisible' is assigned a value but never used.","'fetchUsers' is assigned a value but never used.",["275"],"'updateTask' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'MdOutlineDashboard' is defined but never used.","'Drawer' is defined but never used.","'styled' is defined but never used.","'bell' is assigned a value but never used.","'menu' is assigned a value but never used.","'Text' is assigned a value but never used.","'visible' is assigned a value but never used.","'sidenavType' is assigned a value but never used.","'setSidenavType' is assigned a value but never used.","'showDrawer' is assigned a value but never used.","'hideDrawer' is assigned a value but never used.",["276"],"React Hook useEffect has a missing dependency: 'UserList'. Either include it or remove the dependency array.",["277"],"'datas' is assigned a value but never used.","'loadings' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'previewImage'. Either include it or remove the dependency array.",["278"],"no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"281","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [TasskLists]",{"range":"292","text":"293"},"Update the dependencies array to be: [fetchUsers]",{"range":"294","text":"295"},"Update the dependencies array to be: [TeamList, fetchUsers]",{"range":"296","text":"297"},"Update the dependencies array to be: [TasskLists, data]",{"range":"298","text":"299"},{"range":"300","text":"295"},"Update the dependencies array to be: [UserList]",{"range":"301","text":"302"},"Update the dependencies array to be: [data, form, previewImage]",{"range":"303","text":"304"},[1513,1515],"[TasskLists]",[1351,1353],"[fetchUsers]",[2407,2409],"[TeamList, fetchUsers]",[2968,2974],"[TasskLists, data]",[1020,1022],[894,896],"[UserList]",[984,996],"[data, form, previewImage]"]